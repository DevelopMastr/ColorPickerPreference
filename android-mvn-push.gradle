/*if (!(hasProperty("nexusUsername") && hasProperty("nexusPassword"))) {
    return;
}
*/
apply plugin: 'maven-publish'
//apply plugin: 'java-library'
apply plugin: 'signing'
/*
plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}
*/
group = 'com.github.developmastr'
version = '1.0'
/*
java {
    withJavadocJar()
    withSourcesJar()
}*/
//apply plugin: 'signing'
/*
publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'com.github.developmastr'
            artifactId = 'colorpickerpreference'
            version = '1.0'

            //from components.java
        }
        mavenJava(MavenPublication) {
            pom {
                name = 'ColorPickerPreference'
                description = 'Color Picker Preference'
                url = 'https://github.com/DevelopMastr/ColorPickerPreference'
                properties = [
                        myProp: "value",
                        "prop.with.dots": "anotherValue"
                ]
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'DevelopMastr'
                        name = 'DevelopMastr'
                        email = 'infodmastr@gmail.com'
                    }
                }
                scm {
                    url = 'https://github.com/DevelopMastr/ColorPickerPreference'
                    connection = 'scm:git@github.com:DevelopMastr/ColorPickerPreference.git'
                    developerConnection = 'scm:git@github.com:DevelopMastr/ColorPickerPreference.git'
                }
            }
        }
    }
}
*/
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'colorpickerpreference'
            //from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'ColorPickerPreference'
                description = 'Color Picker Preference'
                url = 'https://github.com/DevelopMastr/ColorPickerPreference'
                properties = [
                        myProp: "value",
                        "prop.with.dots": "anotherValue"
                ]
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'DevelopMastr'
                        name = 'DevelopMastr'
                        email = 'infodmastr@gmail.com'
                    }
                }
                scm {
                    url = 'https://github.com/DevelopMastr/ColorPickerPreference'
                    connection = 'scm:git@github.com:DevelopMastr/ColorPickerPreference.git'
                    developerConnection = 'scm:git@github.com:DevelopMastr/ColorPickerPreference.git'
                }
            }
        }
    }
    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
            def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

/*
javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
*/
/*
afterEvaluate { project ->
    project.version = android.defaultConfig.versionName
    project.group = 'com.github.developMastr'

    uploadArchives {
        repositories {
            mavenDeployer {
                //beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                pom.artifactId = 'colorpickerpreference'

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: nexusUsername, password: nexusPassword)
                }

                pom.project {
                    name 'ColorPickerPreference'
                    packaging 'aar'
                    description 'Android Color Picker dm library ("Pick a Color Preference")'
                    url 'https://github.com/DevelopMastr/ColorPickerPreference'

                    scm {
                        url 'https://github.com/DevelopMastr/ColorPickerPreference'
                        connection 'scm:git@github.com:DevelopMastr/ColorPickerPreference.git'
                        developerConnection 'scm:git@github.com:DevelopMastr/ColorPickerPreference.git'
                    }

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'DevelopMastr'
                            name 'DevelopMastr'
                        }
                    }
                }
            }
        }
    }

    signing {
        required { gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }

    task androidJavadocs(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))

        options {
            linksOffline "http://d.android.com/reference", "${android.sdkDirectory}/docs/reference"
        }
    }

    task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
        classifier = 'javadoc'
        from androidJavadocs.destinationDir
    }

    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    artifacts {
        archives androidSourcesJar
        archives androidJavadocsJar
    }
}

*/
java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}